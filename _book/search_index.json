[["pca.html", "Chapter 5 Principal Component analysis 5.1 Data Preparation 5.2 Parallel analysis (PA)", " Chapter 5 Principal Component analysis One of the most important algorithms used in dimensionality reduction is PCA. This method works very well with large datasets which makes it ideal for tasks such as this one. 5.1 Data Preparation We will be working with a sample size of 50 from the Values data. This will be utilized for demonstrating the code. The problem of positive definite matrices although has not been completely solved at this point, the demonstrations are quite helpful. set.seed(133) n = 50 data_PA &lt;- data_val %&gt;% drop_na() %&gt;% group_by(country) %&gt;% sample_n(n) %&gt;% ungroup %&gt;% dplyr::select(-country) %&gt;% t %&gt;% cor data_PA %&gt;% reshape2::melt(value.name = &quot;cor&quot;) %&gt;% ggplot(aes(x=cor)) + geom_density(fill=&quot;#69b3a2&quot;, color=&quot;#e9ecef&quot;, alpha=0.8)+ labs(title = &quot;Distribution of correlations - Values Raw data, n= 50&quot;, x = &quot;Range of correlation values&quot;)+ theme_ipsum() + theme(plot.title = element_text(size=9)) 5.2 Parallel analysis (PA) PA is considered to be one of the most trusted algorithms to determine the number of factors to be retained in a dataset. It has been proven to be more accurate than several other statistical methods such as the elbow method using the scree plot, Kaiser rule, or Velicer’s MAP test. Traditional PA compares eigenvalues (\\(\\lambda_1\\)…\\(\\lambda_k\\)) generated by the data at hand with averages of simulated eigenvalues (\\(\\bar{\\lambda}_1\\)…\\(\\bar{\\lambda}_k\\)). Correlation matrices consisting of the same dimensions are randomly generated a specific number of times and averages of all eigenvalues simulated are retained. The mean simulated eigenvalues are compared with the eigenvalues obtained in the data. When the \\(\\lambda_k\\) &gt; \\(\\bar{\\lambda}_k\\), you retain the eigenvalue. The number of eigenvalues retained is considered as the most optimum number for identifying the dimensionality of the data. #Function for building Parallel analysis plots PA_graph &lt;- function(data){ library(paran) library(scales) PA_allData &lt;- paran({{data}}, iterations = 1000, centile = 0, quietly = TRUE, status = TRUE, all = TRUE, cfa = TRUE, graph = FALSE) PA_df &lt;- tibble(PA_allData$AdjEv, PA_allData$Ev, PA_allData$RndEv, PA_allData$Bias) PA_df &lt;- PA_df %&gt;% janitor::clean_names() %&gt;% tibble::rownames_to_column() %&gt;% mutate(rowname= as.numeric(rowname)) %&gt;% rename(&quot;pc&quot; = rowname, &quot;adj_ev&quot; = pa_all_data_adj_ev, &quot;ev&quot; = pa_all_data_ev, &quot;rnd_ev&quot; = pa_all_data_rnd_ev, &quot;bias&quot; = pa_all_data_bias) %&gt;% pivot_longer(cols = c(adj_ev, ev, bias)) PA_df %&gt;% ggplot(aes(x = pc, y = value, color = name))+ geom_point(size = 1.5)+ geom_line()+ scale_x_continuous(name=&#39;Factor Number&#39;, breaks= pretty_breaks()) + scale_y_continuous(name=&#39;Eigenvalue&#39;, breaks= pretty_breaks()) + labs(legend_title = &quot;Type of values&quot;)+ scale_color_manual(values=c(&quot;#69b3a2&quot;, &quot;#85C1E9&quot;, &quot;#F5B041&quot;))+ geom_vline(xintercept = PA_allData$Retained, linetype = &#39;dashed&#39;, color = &quot;#566573&quot;)+ #geom_text(aes(x=10, label=&quot;Retain 5 components&quot;, y=40), position = position_dodge(width=0.9), colour=&quot;#566573&quot;, angle=90, size=2)+ guides(color = guide_legend(title=&quot;Iteration type&quot;))+ theme_minimal() + theme(plot.title = element_text(size=9)) } PA_graph(data_PA) ## ## Using eigendecomposition of correlation matrix. ## Computing: 10% 20% 30% 40% 50% 60% 70% 80% 90% 100% "],["personality-data-1.html", "Chapter 6 Personality data 6.1 Bayesian Parallel Analysis", " Chapter 6 Personality data One of the important things to recognize is that I need to remove rows that have zero variance. These participants have responded to the questionnaire with only one consistent option and this could cause issues with the correlation matrix estimation. This could also lead to issues is eigendecomposition of the matrix. set.seed(900) PA_pty &lt;- bfi %&gt;% dplyr::select(-gender, -education, -age) %&gt;% drop_na() %&gt;% #slice(-drop_row) %&gt;% sample_n(200) %&gt;% t %&gt;% cor() PA_graph(PA_pty) ## ## Using eigendecomposition of correlation matrix. ## Computing: 10% 20% 30% 40% 50% 60% 70% 80% 90% 100% 6.1 Bayesian Parallel Analysis This is a relatively new method to compute Parallel analysis. We will be using a code from a recent paper to carry out this analysis. 6.1.1 Personality data library(matrixcalc) #Personality data set.seed(18) bfi %&gt;% dplyr::select(-gender,-education,-age) %&gt;% drop_na %&gt;% sample_n(20) %&gt;% t %&gt;% cor %&gt;% bayes.pa 6.1.2 Values data set.seed(453) samp = 45 data_val %&gt;% group_by(country) %&gt;% sample_n(samp) %&gt;% ungroup %&gt;% dplyr::select(-country, -V12, -V13, -V14, -V15, -V16, -V17, -V18, -V19, -V20, -V21, -V22) %&gt;% drop_na() %&gt;% mutate(id = paste0(&quot;p&quot;, 1:(samp*3))) %&gt;% ungroup %&gt;% t %&gt;% data.frame %&gt;% janitor::clean_names() %&gt;% mutate_all(., as.integer) %&gt;% map_dfr(.,jitter) %&gt;% drop_na %&gt;% cor %&gt;% #is.positive.definite() bayes.pa "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
